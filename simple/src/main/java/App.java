import client.Client;
import client.Twitter;
import java.util.Arrays;
import java.util.List;
import org.apache.beam.sdk.Pipeline;
import org.apache.beam.sdk.options.Default;
import org.apache.beam.sdk.options.Description;
import org.apache.beam.sdk.options.PipelineOptions;
import org.apache.beam.sdk.options.PipelineOptionsFactory;
import org.apache.beam.sdk.transforms.Create;
import org.apache.beam.sdk.transforms.ParDo;
import org.apache.log4j.Logger;
import transform.dofn.FilterOldOnly;
import transform.dofn.PostToClient;
import transform.dofn.TransformToSample;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private static interface CustomOption extends PipelineOptions {
        @Description("My custom option")
        @Default.String("default")
        String getCustomOption();

        void setCustomOption(String value);
    }

    public static void main(String[] args) {
        Logger logger = Logger.getLogger(App.class);

        CustomOption options = PipelineOptionsFactory.fromArgs(args).as(CustomOption.class);
        logger.info(String.format("Receive option : %s", options.getCustomOption()));
        Pipeline p = Pipeline.create(options);

        Client twitter = new Twitter();
        p.apply(createInput())
                .apply("Transform to object", ParDo.of(new TransformToSample()))
                .apply("Filter only old", ParDo.of(new FilterOldOnly()))
                .apply("Post message", ParDo.of(new PostToClient(twitter)));

        p.run();
    }

    public static Create.Values<String[]> createInput() {
        String[][] data = {
            new String[] {"http://old.com", "old"},
            new String[] {"http://new.com", "new"},
            new String[] {"http://new2.com", "new"},
            new String[] {"http://old2.com", "old"},
            new String[] {"http://other.com", "other"},
        };
        List<String[]> inputs = Arrays.asList(data);
        return Create.of(inputs);
    }
}
